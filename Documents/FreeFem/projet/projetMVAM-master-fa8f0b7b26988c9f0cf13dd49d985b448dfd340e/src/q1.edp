border C1(t=0,1){x=t;y=sin(4*pi*t)/5;label=1;};//sinusoid
//border B1(t=0,0.2){x=t;y=0;label=5;};
//border B2(t=0.2,0.8){x=t;y=t-0.2;label=6;};
//border B3(t=0.4,1){x=0.8;y=1-t;label=7;};
//border B4(t=0.8,1){x=t;y=0;label=8;};

border B1(t=0,0.3){x=t;y=0;label=5;};
border B2(t=0.3,0.7){x=t;y=t-0.3;label=6;};
border B3(t=0.6,1){x=0.7;y=1-t;label=7;};
border B4(t=0.7,1){x=t;y=0;label=8;};
border C2(t=0,1){x=1;y=t;label=2;};
border C3(t=0,1){x=1-t;y=1;label=3;};
border C4(t=0,1){x=0;y=1-t;label=4;};
border D1(t=0,0.3){x=t;y=0;label=5;};
border D2(t=0.3,0.5){x=t;y=t-0.3;label=6;};
border D3(t=0.8,1){x=0.5;y=1-t;label=7;};
border D4(t=0.5,0.6){x=t;y=0;label=8;};
border D5(t=0.6,0.7){x=t;y=0;label=9;};
border D6(t=0.7,0.9){x=t;y=t-0.7;label=10;};
border D7(t=0.8,1){x=0.9;y=1-t;label=11;};
border D8(t=0.9,1){x=t;y=0;label=12;};
//mesh rec = buildmesh(C1(15)+C2(15)+C3(15)+C4(15)); 

mesh rec = buildmesh(B1(20)+B2(20)+B3(20)+B4(20)+C2(20)+C3(20)+C4(20)); 
//mesh rec = buildmesh(D1(20)+D2(20)+D3(20)+D4(20)+D5(20)+D6(20)+D7(20)+D8(20)+C2(20)+C3(20)+C4(20)); 
fespace Vh(rec,P1,periodic=[[2,y],[4,y]]);
fespace Ph(rec,P1,periodic=[[2,y],[4,y]]);
fespace PVh(rec,[P1,P2,P1],periodic=[[2,y],[4,y]]);//if we want to use two finite elements methods
Vh u1;
Vh v1;
Vh u2;
Vh v2;
Vh p;//we do not make two spaces with periodic conditions
Vh q;
//PVh [u1,v1,p];
//PVh [u2,v2,q];
Vh f1 = 0.0;
Vh f2 = 0.0;

real eps = 0.001;
real nu = 1.0;
for (int i = 0; i < 1; i++){
	//problem Stokes([u1,u2,p],[v1,v2,q]) = int2d(rec)(nu*(dx(u2)*dx(v2)+dy(u2)*dy(v2)+dx(u1)*dx(v1)+dy(u1)*dy(v1)))-int2d(rec)(dy(p)*v2)-int2d(rec)(dx(p)*v1)-int2d(rec)(f1*v1+f2*v2)+on(2,u1=2,u2=0)+on(1,u1=0,u2=0)+on(3,u1=0,u2=0)+int2d(rec)(q*(dx(u1)+dy(u2))-eps*p*q);
problem Stokes([u1,u2,p],[v1,v2,q]) = int2d(rec)(nu*(dx(u2)*dx(v2)+dy(u2)*dy(v2)+dx(u1)*dx(v1)+dy(u1)*dy(v1)))-int2d(rec)(dy(p)*v2)-int2d(rec)(dx(p)*v1)-int2d(rec)(f1*v1+f2*v2)+int2d(rec)(q*(dx(u1)+dy(u2))-eps*p*q)+on(1,3,5,6,7,8,u1=0)+on(1,3,5,6,7,8,u2=0)+on(2,u1=2,u2=0);
//problem Stokes([u1,u2,p],[v1,v2,q]) = int2d(rec)(nu*(dx(u2)*dx(v2)+dy(u2)*dy(v2)+dx(u1)*dx(v1)+dy(u1)*dy(v1)))-int2d(rec)(dy(p)*v2)-int2d(rec)(dx(p)*v1)-int2d(rec)(f1*v1+f2*v2)+on(4,u1=2,u2=0)+on(2,u1=2,u2=0)+on(5,6,7,8,9,10,11,12,3,u1=0,u2=0)+int2d(rec)(q*(dx(u1)+dy(u2))-eps*p*q);
	Stokes;
	plot([u1,u2],coef=0.1,value=true);
	rec = adaptmesh(rec,u1,u2,periodic=[[2,y],[4,y]]);
}
//plot(u1);
//plot(u2);
//plot(p);
//plot([u1,u2],coef=0.3,value = true);


